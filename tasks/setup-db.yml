---
- name: Initialize internal variables
  set_fact:
    remove_talkgroups: []
    add_talkgroups: []
    remove_users: []
    add_users: []
    update_settings: {}
  tags: always

- name: Ensure that the database server is started
  service:
    name: "{{ svxportal_db_service }}"
    state: started
    enabled: yes

- name: "Ensure that database '{{ svxportal_db_name }}' is created"
  mysql_db:
    name: "{{ svxportal_db_name }}"
    login_unix_socket: "{{ svxportal_db_sock }}"
    state: present
  register: db_create

- name: Upload the default database schema if database was just created
  copy:
    src: "{{ svxportal_src_dir }}/sql/svx.sql"
    dest: "/tmp/svx.sql"
    owner: root
    group: root
    mode: 0640
  when: db_create.changed

- name: Load the default database schema if database was just created
  mysql_db:
    name: "{{ svxportal_db_name }}"
    login_unix_socket: "{{ svxportal_db_sock }}"
    target: "/tmp/svx.sql"
    state: import
  when: db_create.changed

- name: Create DB user for the web application to use
  mysql_user:
    name: "{{ svxportal_db_user }}"
    password: "{{ svxportal_db_password }}"
    priv: "{{ svxportal_db_name }}.*:ALL"
    login_unix_socket: "{{ svxportal_db_sock }}"
    state: present
  no_log: True

- name: Set up talkgroups in database
  include_tasks: setup-db-talkgroups.yml
  when: svxportal_talkgroups is defined

- name: Set up users in database
  include_tasks: setup-db-users.yml
  when: svxportal_users is defined

- name: Update settings in database
  include_tasks: setup-db-settings.yml
  when: svxportal_settings is defined

- name: Copy SQL update script to the database server
  template:
    src: svxportal-ansible.sql.j2
    dest: /tmp/svxportal-ansible.sql
    mode: 0600
  register: copy_sql_update_script
  when: >-
    add_talkgroups|length + remove_talkgroups|length > 0 or
    add_users|length + remove_users|length > 0 or
    update_settings.keys()|length > 0

- name: Load SQL database updates
  mysql_db:
    name: "{{ svxportal_db_name }}"
    login_unix_socket: "{{ svxportal_db_sock }}"
    target: "/tmp/svxportal-ansible.sql"
    state: import
  when: copy_sql_update_script.changed
